{
  "name": "mhl-buoy-data",
  "version": "0.0.2",
  "description": "MHL buoys track swell conditions off the coast of NSW Australia. This will parse their GIF graphs so the data can be used in other ways",
  "main": "index.js",
  "scripts": {
    "test": "mocha test/test.js -R spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/DylanFM/mhl-buoy-data.git"
  },
  "keywords": [
    "surf",
    "ocean",
    "weather",
    "NSW",
    "Australia"
  ],
  "author": {
    "name": "Dylan Fogarty-MacDonald"
  },
  "license": "MIT",
  "dependencies": {
    "underscore": "~1.4.2"
  },
  "devDependencies": {
    "mocha": "~1.7.0"
  },
  "readme": "# MHL Buoy Data\n\n[![build status](https://secure.travis-ci.org/DylanFM/mhl-buoy-data.png)](http://travis-ci.org/DylanFM/mhl-buoy-data)\n\n[MHL](http://mhl.nsw.gov.au/) buoys track swell conditions off the coast of NSW Australia. This will parse their GIF graphs so the data can be used in other ways.\n\nLearn more about these graphs here: http://new.mhl.nsw.gov.au/data/realtime/wave/\n\n## Turns this\n\n![Sydney buoy](https://dl.dropbox.com/u/1614309/MHL%20repo/syddir-1.gif)\n\n## Into this\n\n```javascript\n{ \n  direction: 138.46, \n  hsig: 0.97, \n  hmax: 1.75, \n  tsig: 5.94, \n  tp1: 5.1 \n}\n```\n\nI'm only interested in the latest readings, that's what this object outlines.\n\n## Installation\n\n```\nnpm install mhl-buoy-data\n```\n\n## Usage\n\nmhl-buoy-data exports a function that takes 2 parameters: a path to the gif and a callback. The callback will be called once the gif has been parsed. The callback will receive an argument that is an object representing the current conditions for the buoy.\n\nHere's a little bit from the tests showing how it's used.\n\n```javascript\nvar parseMHLGraph = require('mhl-buoy-data')\nvar assert        = require('assert')\n\n// You can pass a path to a local gif, or a URL\nparseMHLGraph('./test/fixtures/syddir-1.gif', function(conditions) {\n  assert.equal(conditions.direction, 138.46) // Degrees true north\n  assert.equal(conditions.hmax, 1.75)        // Metres\n  assert.equal(conditions.hsig, 0.97)        // Metres\n  assert.equal(conditions.tp1, 5.1)          // Seconds\n  assert.equal(conditions.tsig, 5.94)        // Seconds\n})\n```\n\n## Glossary\n\nFrom the [MHL's glossary](http://www.mhl.nsw.gov.au/www/wave_glossary.htmlx):\n\n### Hmax\nMaximum wave height in a recorded burst of raw data.\n\n### Hsig\nSignificant wave height = average height of the waves which comprise the highest 33% of waves in a given sample period (typically 20 to 30 minutes).\n\n### Direction\nThe direction from which ocean waves approach a location. Generally, the principal wave direction is represented by the direction which corresponds to the peak period of the energy spectrum (TP1).\n\n### Tsig\nSignificant period = average period of the waves used to define Hsig\n\n### Tp1\nPeriod of the peak of the energy spectrum.\n\n## Also...\n\n* This is certainly a work in progress and there's a good chance that values are slightly off. Things will be ironed out over time.\n* There's a little GIF decoder in here too. It was hastily hacked and the code is a horror, but that'll improve when I extract it. Big thanks to the GIF spec and https://github.com/shachaf/jsgif. JS Gif in particular was handy, and I pulled across some things like the LZW decoder.\n\n## License\n\nMHL Buoy Data is released under the MIT license.\n",
  "_id": "mhl-buoy-data@0.0.2",
  "_from": "mhl-buoy-data"
}
